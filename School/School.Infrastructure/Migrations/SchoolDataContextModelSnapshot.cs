// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using School.Infrastructure;
using System;

namespace School.Infrastructure.Migrations
{
    [DbContext(typeof(SchoolDataContext))]
    partial class SchoolDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("School.Domain.Model.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AddressId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnName("Address1")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address2")
                        .HasColumnName("Address2")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("City")
                        .HasColumnName("City")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("State")
                        .HasColumnName("State")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Zip")
                        .HasColumnName("Zip")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.ToTable("tblAddress");
                });

            modelBuilder.Entity("School.Domain.Model.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ParentId");

                    b.Property<int>("AddressId")
                        .HasColumnName("AddressId");

                    b.Property<DateTime>("DOB")
                        .HasColumnName("DOB");

                    b.Property<string>("FirstName")
                        .HasColumnName("FirstName");

                    b.Property<string>("Gender")
                        .HasColumnName("Gender");

                    b.Property<string>("LastName")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .HasColumnName("MiddleName");

                    b.HasKey("ParentId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("tblParents");
                });

            modelBuilder.Entity("School.Domain.Model.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("AddressId");

                    b.Property<DateTime>("DOB")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnName("FirstName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .HasColumnName("LastName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MiddleName")
                        .HasColumnName("MiddleName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("ParentId");

                    b.Property<string>("Sex")
                        .HasColumnName("Gender")
                        .HasColumnType("varchar(30)");

                    b.HasKey("StudentId");

                    b.HasIndex("AddressId");

                    b.ToTable("tblStudents");
                });

            modelBuilder.Entity("School.Domain.Model.Parent", b =>
                {
                    b.HasOne("School.Domain.Model.Address", "Address")
                        .WithOne("Parent")
                        .HasForeignKey("School.Domain.Model.Parent", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("School.Domain.Model.Student", b =>
                {
                    b.HasOne("School.Domain.Model.Address", "Address")
                        .WithMany("Students")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
